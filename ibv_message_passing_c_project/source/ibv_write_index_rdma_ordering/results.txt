1. Run with large write queue and write_index not sent inline

This has ~38% of data blocks where sampled an unexpected sequence number:
$ ibv_write_index_rdma_ordering/ibv_write_index_rdma_ordering mlx4_0 1 mlx4_0 2 0 500 10000000 
Write: max_write_queue_entries_in_use=273
Read: num_unexpected_sequence_numbers=3805876


2. Run with a write queue of 2 write_index not sent inline

I.e. the smallest write queue size which allows more than one transfer outstanding at one

This as ~46% of data blocks where sampled an unexpected sequence number:
$ ibv_write_index_rdma_ordering/ibv_write_index_rdma_ordering mlx4_0 1 mlx4_0 2 0 2 10000000 
Write: max_write_queue_entries_in_use=2
Read: num_unexpected_sequence_numbers=4614216


3. Run with a write queue of 1 and write_index not sent inline

I.e. only a single transfer outstanding at once

No unexpected sequence numbers seen:
$ ibv_write_index_rdma_ordering/ibv_write_index_rdma_ordering mlx4_0 1 mlx4_0 2 0 1 10000000 
Write: max_write_queue_entries_in_use=1
Read: num_unexpected_sequence_numbers=0


4. Run with varying write queue sizes and write_index sent inline

No unexpected sequence numbers seen.

$ ibv_write_index_rdma_ordering/ibv_write_index_rdma_ordering mlx4_0 1 mlx4_0 2 1 500 10000000 
Write: max_write_queue_entries_in_use=75
Read: num_unexpected_sequence_numbers=0

$ ibv_write_index_rdma_ordering/ibv_write_index_rdma_ordering mlx4_0 1 mlx4_0 2 1 2 10000000 
Write: max_write_queue_entries_in_use=2
Read: num_unexpected_sequence_numbers=0

$ ibv_write_index_rdma_ordering/ibv_write_index_rdma_ordering mlx4_0 1 mlx4_0 2 1 1 10000000 
Write: max_write_queue_entries_in_use=1
Read: num_unexpected_sequence_numbers=0


5. Short run with write_index not sent inline

Captured packets on receive device with:
$ sudo ibdump --ib-dev=mlx4_0 --ib-port=2 --write=not_inline_q10.pcap

$ ibv_write_index_rdma_ordering/ibv_write_index_rdma_ordering mlx4_0 1 mlx4_0 2 0 10 20 not_inline_q10.csv
Write: max_write_queue_entries_in_use=10
Read: num_unexpected_sequence_numbers=9

The order of the RDMA transfers from the captured packets was:
- Data block sequence num 1
- Write index 6
- Data block sequence num 2
- Write index 7
- Data block sequence num 3
- Write index 7
- Data block sequence num 4
- Write index 8
- Data block sequence num 5
- Write index 8
- Data block sequence num 6
- Write index 9
- Data block sequence num 7
- Write index 10
- Data block sequence num 8
- Write index 10
- Data block sequence num 9
- Write index 10
- Data block sequence num 10
- Write index 10
- Data block sequence num 11
- Write index 13
- Data block sequence num 12
- Write index 13
- Data block sequence num 13
- Write index 16
- Data block sequence num 14
- Write index 17
- Data block sequence num 15
- Write index 18
- Data block sequence num 16
- Write index 19
- Data block sequence num 17
- Write index 20
- Data block sequence num 18
- Write index 20
- Data block sequence num 19
- Write index 20
- Data block sequence num 20
- Write index 20

This shows the value in the transferred write_index can be in advance of the sequence number in the data block;
Only block sequence numbers 1 and 11 didn't have their write_index transferred before the data block.

The not_inline_q10.csv results from the test program shows the receiver sampled initial incorrect sequence numbers for
the following:
4
6
8
9
13
15
17
19
20
